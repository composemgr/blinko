# nginx proxy address - http://172.17.0.1:59095

name: blinko
x-logging: &default-logging
  options:
    max-size: '5m'
    max-file: '1'
  driver: json-file

services:
  app:
    image: blinkospace/blinko:latest
    container_name: blinko-app
    restart: always
    pull_policy: always
    logging: *default-logging
    environment:
      - NODE_ENV=production
      - NEXTAUTH_URL=https://${BASE_HOST_NAME:-$HOSTNAME}
      - NEXT_PUBLIC_BASE_URL=https://${BASE_HOST_NAME:-$HOSTNAME}
      - NEXTAUTH_SECRET=${ENCRYPTION_KEY:-dfmdafnsadmcnmxkNckmnakmnckamnck}
      - DATABASE_URL=postgresql://postgres:CezapmhZiHlefz7V6xHbRGtd4jdmSeqV@blinko-db:5432/postgres
    ports:
      - 172.17.0.1:59095:1111
    volumes:
      - './rootfs/data/blinko:/app/.blinko'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://blinko-app:1111/']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    depends_on:
      db:
        condition: service_healthy
    networks:
      - blinko

  db:
    image: postgres:14
    container_name: blinko-db
    restart: always
    pull_policy: always
    logging: *default-logging
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=CezapmhZiHlefz7V6xHbRGtd4jdmSeqV
    volumes:
      - './rootfs/db/postgres:/var/lib/postgresql/data'
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres', '-d', 'postgres']
      interval: 5s
      timeout: 10s
      retries: 5
    networks:
      - blinko

networks:
  blinko:
    name: blinko
    external: false
